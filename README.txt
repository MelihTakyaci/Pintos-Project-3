# my-pintos-tests

**Pintos**, C diliyle yazÄ±lmÄ±ÅŸ, 32-bit x86 mimarisi Ã¼zerinde Ã§alÄ±ÅŸan basit bir Ã¶ÄŸretici iÅŸletim sistemidir. Bu depo, orijinal Pintos projesinde tanÄ±mlÄ± olan **tÃ¼m testleri baÅŸarÄ±yla geÃ§en** eksiksiz bir uygulamayÄ± iÃ§ermektedir.

ğŸ“š Pintos hakkÄ±nda daha fazla bilgi iÃ§in orijinal proje sayfasÄ±na bakabilirsiniz:
[http://web.stanford.edu/class/cs140/projects/pintos/pintos.html](http://web.stanford.edu/class/cs140/projects/pintos/pintos.html)

---

## ğŸš€ GerÃ§ekleÅŸtirilen Ã–zellikler

Bu uygulama, modern bir iÅŸletim sistemi Ã§ekirdeÄŸinde beklenen tÃ¼m ana bileÅŸenleri ve geliÅŸtirmeleri iÃ§ermektedir:

* âœ… **Adil ZamanlayÄ±cÄ± (Scheduler)**

  * GiriÅŸ/Ã‡Ä±kÄ±ÅŸ aÄŸÄ±rlÄ±klÄ± ve CPU aÄŸÄ±rlÄ±klÄ± yÃ¼kleri etkili biÃ§imde iÅŸler.
* âœ… **Ã–ncelikli Zamanlama (Priority Scheduling)**

  * Ã–ncelik baÄŸÄ±ÅŸÄ± (priority donation) desteÄŸiyle Ã¶ncelik tersine dÃ¶nmesini engeller.
* âœ… **Sanal Bellek Sistemi (Virtual Memory)**

  * Disk takasÄ± (swap)
  * Dosya eÅŸleme (memory-mapped files / mmap)
  * PaylaÅŸÄ±mlÄ± salt-okunur sayfalar
* âœ… **Ã‡oklu Ä°ÅŸ ParÃ§acÄ±klÄ± Dosya Sistemi**

  * Geri yazma tampon belleÄŸi (write-back buffer cache)
  * Ã–nden okuma (read-ahead)
  * Seyrek dosya desteÄŸi (sparse files)

---

## ğŸ“¦ Teslim Bilgisi

### GRUP

```
2023280154Â Â MelihÂ TakyacÄ±Â Â Â Â Â melih.takyaci@ogr.deu.edu.tr
2023280140Â Â EmreÂ Ã–zdemirÂ Â Â Â Â Â emre.ozdemir23@ogr.deu.edu.tr
2022280128Â Â ErenÂ Ã–nderÂ Â Â Â Â Â Â Â eren.onder@ogr.deu.edu.tr
2022280050Â Â EmirÂ MutluÂ Â Â Â Â Â Â Â emir.mutlu@ogr.deu.edu.tr

```

### Ã–N HAZIRLIKLAR

* 1. Ã¶devde yaÅŸanan aksaklÄ±k nedeniyle bu Ã¶devle birlikte teslim edilmiÅŸtir. AÅŸaÄŸÄ±da hem Ã–dev 1 hem de Ã–dev 3â€™e ait kodlar ve iÃ§erikler yer almaktadÄ±r.
* Ek kaynak olarak sadece Pintos belgeleri, Stanford ders materyalleri ve [Suryaâ€™nÄ±n rehberi](https://tssurya.wordpress.com/2014/08/16/installing-pintos-on-your-machine/) kullanÄ±lmÄ±ÅŸtÄ±r.

---

## ğŸ”§ Kurulum ve Derleme

### Gereksinimler

* `-m32` desteÄŸi olan GCC (32-bit toolchain)
* QEMU
* Python 2 veya uyumlu `perl` scriptleri
* `make`, `gdb` ve standart Unix araÃ§larÄ±

### HÄ±zlÄ± BaÅŸlangÄ±Ã§

```bash
cd src/threads
make check   # Thread testlerini Ã§alÄ±ÅŸtÄ±rÄ±r

cd ../userprog
make check   # KullanÄ±cÄ± programÄ± testlerini Ã§alÄ±ÅŸtÄ±rÄ±r

cd ../vm
make check   # Sanal bellek testlerini Ã§alÄ±ÅŸtÄ±rÄ±r

cd ../filesys
make check   # Dosya sistemi testlerini Ã§alÄ±ÅŸtÄ±rÄ±r
```

---

## ğŸ“š Proje KatkÄ± Bilgileri

### src

* Pintos Ã§ekirdeÄŸi ilk olarak Ben Pfaff [blp@cs.stanford.edu](mailto:blp@cs.stanford.edu) tarafÄ±ndan yazÄ±lmÄ±ÅŸtÄ±r.
* Ek Ã¶zellikler Anthony Romano [chz@vt.edu](mailto:chz@vt.edu) tarafÄ±ndan katkÄ±da bulunulmuÅŸtur.
* Ä°ÅŸletim sistemi yapÄ±sÄ±, UC Berkeley'den Nachos sisteminden esinlenmiÅŸtir. BazÄ± kaynak dosyalar Nachos C++ kodunun C diline doÄŸrudan Ã§evrilmiÅŸ halleridir ve UCB lisansÄ±nÄ± taÅŸÄ±r.

### projects

* Projeler Ã¶ncelikle Ben Pfaff [blp@cs.stanford.edu](mailto:blp@cs.stanford.edu) tarafÄ±ndan tasarlanmÄ±ÅŸtÄ±r.

* Godmar Back [godmar@gmail.com](mailto:godmar@gmail.com) proje tasarÄ±mÄ±na Ã¶nemli katkÄ±larda bulunmuÅŸtur.

* Projeler, Stanford Ãœniversitesi CS140 dersindeki TAâ€™lar tarafÄ±ndan tasarlanmÄ±ÅŸ Ã¶nceki Nachos projelerinden tÃ¼retilmiÅŸtir. KatkÄ±da bulunan bazÄ± isimler:

  * Yu Ping [yph@cs.stanford.edu](mailto:yph@cs.stanford.edu)
  * Greg Hutchins
  * Kelly Shaw [kashaw@cs.stanford.edu](mailto:kashaw@cs.stanford.edu)
  * Paul Twohey [twohey@cs.stanford.edu](mailto:twohey@cs.stanford.edu)
  * Sameer Qureshi [squreshi@cs.stanford.edu](mailto:squreshi@cs.stanford.edu)
  * John Rector

* KoÅŸul deÄŸiÅŸkeni (condition variable) Ã¶rnek kodu, Dawson Engler ve Mendel Roseblumâ€™un ders slaytlarÄ±ndan alÄ±nmÄ±ÅŸtÄ±r.
